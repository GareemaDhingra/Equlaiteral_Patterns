# -*- coding: utf-8 -*-
"""Equilateral_Pattern.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14IWK92siCtYvw7oLBwCxs4O7IM6T-wSn

# 1st Method

To make an equilateral traingle in python, we need to have three loops,
1. For maintaining rows
2. For maintaining spaces so it looks like an equilateral traingle
3. For maintaing columns and printing the required varaible
"""

#Pattern 1
rows=int(input('Number of rows:'))
k=rows
for i in range(rows+1): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces 
    print(end=' ')
  k=k-1
  for y in range(i): #inner loop 2 for printing numbers
    print(y+1,end=' ') #here we increment the number
  print()

#Pattern 2
rows=int(input('Number of rows:'))
k=rows
for i in range(rows+1): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces
    print(end=' ') 
  k=k-1
  for y in range(i): #inner loop 2 for printing numbers
    print(i,end=' ') #here we are just printing the number of rows
  print()

#Pattern 3
rows=int(input('Number of rows:'))
k=rows
for i in range(65, 65+rows): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces
    print(end=' ')
  k=k-1
  for y in range(65, i+1): #inner loop 2 for printing numbers
    print(chr(y),end=' ') #here we are printing the  upper case letters using ascii values, incrementing in every row
  print()

#Pattern 4
rows=int(input('Number of rows:'))
k=rows
for i in range(rows+1): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces
    print(end=' ')
  k=k-1
  for y in range(i): #inner loop 2 for printing numbers
    print(chr(64+i),end=' ') #here we are printing the upper case letters using ascii values, incrementing once per row
  print()

#Pattern 5
rows=int(input('Number of rows:'))
k=rows
for i in range(97, 97+rows): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces
    print(end=' ')
  k=k-1
  for y in range(97, i+1): #inner loop 2 for printing numbers
    print(chr(y),end=' ') #here we are printing the lower case letters using ascii values, incrementing in every row
  print()

#Pattern 6
rows=int(input('Number of rows:'))
k=rows
for i in range(rows+1): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces
    print(end=' ')
  k=k-1 
  for y in range(i): #inner loop 2 for printing numbers
    print(chr(96+i),end=' ') #here we are printing the lower case letters using ascii values, incrementing once per row
  print()

#Pattern 7
rows=int(input('Number of rows:'))
k=rows
for i in range(rows+1): #outer loop for rows
  for y in range(k): #inner loop 1 for spaces
    print(end=' ')
  k=k-1
  for y in range(i): #inner loop 2 for printing numbers
    print('*',end=' ') #here we are printing asterisk 
  print()

"""#2nd Method

Here, instead of two loops we are using only one loop. But there are some patterns we can't create using this method.
We have used i as the loop variable and decremented k inside the loop.
"""

#Pattern 2(b)
k=int(input('Number of rows:'))
for i in range(k+1):
    print(' '*k, end='') # repeat space for n times
    print((str(i)+' ')*(i)) # repeats the i for i times
    #print('')
    k-=1

#Pattern 4(b)
k=int(input('Number of rows:'))
for i in range(k+1):
    print(' '*k, end='') # repeat space for n times
    print((chr(64+i)+' ')*(i)) # repeats the alphabet we got from ascii value for i times
    #print('')
    k-=1

#Pattern 6(b)
k=int(input('Number of rows:'))
for i in range(k+1):
    print(' '*k, end='') # repeat space for n times
    print((chr(96+i)+' ')*(i)) # repeats the alphabet we got from ascii value for i times
    #print('')
    k-=1

#Pattern 8
k=int(input('Number of rows:'))
for i in range(k+1):
    print(' '*k, end='') # repeat space for n times
    print('@ '*(i)) # repeat @ for i times
    k-=1